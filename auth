from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.firefox.service import Service as FirefoxService
from webdriver_manager.firefox import GeckoDriverManager
import unittest
import time
import HtmlTestRunner

class KeyboardTest(unittest.TestCase):
    USER = (By.ID, 'username')
    PASS = (By.ID, 'password')

    def setUp(self):
        # Set up the Firefox driver
        s = FirefoxService(executable_path=GeckoDriverManager().install())
        self.firefox = webdriver.Firefox(service=s)
        self.firefox.maximize_window()
        self.firefox.implicitly_wait(5)

    def test_select_all(self):
        self.firefox.get("https://the-internet.herokuapp.com/login")
        # Find the username input field using the defined locator
        user = self.firefox.find_element(*self.USER)
        # Type 'Anda' in the username input field
        user.send_keys('Anda')
        time.sleep(1)
        # Clear the content of the username input field
        user.clear()
        time.sleep(2)
        # Type 'Dam' in the username input field
        user.send_keys('Dam')
        time.sleep(1)
        # Adauga litera a
        user.send_keys('a')
        time.sleep(2)
        # Move the cursor one character to the left
        user.send_keys(Keys.ARROW_LEFT)
        time.sleep(2)
        # Delete one character using the backspace key
        user.send_keys(Keys.BACKSPACE)
        time.sleep(2)
        # Type 'AAAA' in the username input field
        user.send_keys('AAAA')

        # Find the password input field using the defined locator
        password = self.firefox.find_element(*self.PASS)
        # Type 'madd' in the password input field
        password.send_keys('madd')
        time.sleep(3)

    def tearDown(self):
        # Close the Firefox driver
        self.firefox.quit()

if __name__ == "__main__":
    # Define the test suite
    suite = unittest.TestLoader().loadTestsFromTestCase(KeyboardTest)

    # Define the test runner
    runner = HtmlTestRunner.HTMLTestRunner(output=".", report_name="TestReport", add_timestamp=False)

    # Run the tests and generate the HTML report
    runner.run(suite)
